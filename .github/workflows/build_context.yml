
name: Build DAQ Environment

on:
  push:
    paths:
      - 'context/**'
      - '!context/README.md'
      - '.github/workflows/build_context.yml'
    branches:
      - '**'
    tags:
      - 'context/v*.*'

# workflow consists of one building and testing job
jobs:
  build-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    -
      name: Setup QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - 
      name: Cache Docker Layers on GitHub
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: ${{ runner.os }}-buildx
    -
      name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - 
      name: Get Build Context
      uses: actions/checkout@v2
    -
      name: Determine Image Tags
      id: generate_tag
      run: |
          _repo=tomeichlersmith/daq-env
          _tag=noop
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # if pushing a git tag ==> get the git tag for the docker tag
            _tag=${GITHUB_REF#refs/tags/context/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            # pushing to a branch ==> docker tag is branch name
            #   if branch name is default_branch, docker tag is 'edge'
            _tag=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$_tag" ]; then
              _tag=edge
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            # pull request branch ==> docker tag is pr number
            _tag=pr-${{ github.event.number }}
          fi
          _main_tag="${_repo}:${_tag}"
          _push_tags="${_main_tag}"
          if [[ $_tag =~ ^v[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            # latest docker tag is latest version built matching the format v<1-3 digis>.<1-3 digis>
            _push_tags="$_push_tags,${_repo}:latest"
          elif [ "${{ github.event_name }}" = "push" ]; then
            # on push actions, tag with sha of GITHUB as well
            _push_tags="$_push_tags,${_repo}:sha-${GITHUB_SHA::8}"
          fi
          echo "Generated Tags: ${_push_tags}"
          echo ::set-output name=push_tags::${_push_tags}
          echo ::set-output name=main_tag::${_main_tag}
    -
      name: Build the Image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: context
        file: context/Dockerfile
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        push: true
        tags: ${{ steps.generate_tag.outputs.push_tags }}

